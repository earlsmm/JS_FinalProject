var map;
var markers = [];
var lastinfowindow;
var locIndex;

//Credit: MDN
if ( !Array.prototype.forEach ) {
  Array.prototype.forEach = function(fn, scope) {
    for(var i = 0, len = this.length; i < len; ++i) {
      fn.call(scope, this[i], i, this);
    }
  }
}

/*
This is the data as a JS array. It could be generated by CF of course. This
drives the map and the div on the side.
*/
// var data = [
// {address:'1340 West Towne Square Road Mequon WI 53092',title:'Center for Diagnostic Imaging-Fancy Pants',type:'lab'},
// {address:'2445 North Mayfair Road Wauwatosa WI 53226',title:'Center for Diagnostic Imaging-Wauwatosa',type:'lab'},
// {address:'9200 W. Wisconsin Ave. Milwaukee WI 53227',title:'Clinical Cancer Center Pharmacy',type:'pharmacy'},
// {address:'W180 N8085 Town Hall Road Menomonee Falls WI 53051',title:'Community Memorial Hospital',type:'hospital'}
// ];

var geojson_url = 'https://raw.githubusercontent.com/earlsmm/JS_FinalProject/master/detroitVisitorIdeas.geojson'

// //A utility function that translates a given type to an icon
// function getIcon(type) {
// 	switch(type) {
// 		case "pharmacy": return "";
// 		case "hospital": return "";
// 		case "lab": return "";
// 		default: return "";
// 	}
// }

function loadMarkers() {
    console.log('creating markers')
    var infoWindow = new google.maps.InfoWindow()

  $.getJSON(geojson_url, function(result) {
      // Post select to url.
      data = result['features']
      $.each(data, function(key, val) {
        var point = new google.maps.LatLng(
                parseFloat(val['geometry']['coordinates'][1]),
                parseFloat(val['geometry']['coordinates'][0]));
        var titleText = val['properties']['Name']
        var descriptionText = val['properties']['Notes']
        var marker = new google.maps.Marker({
          position: point,
          title: titleText,
          map: map,
          properties: val['properties']
         });
         var markerInfo = "<div><h3>" + titleText + "</h3>Notes: " + descriptionText + "</div>"


         marker.addListener('click', function() {
               infoWindow.close()
               infoWindow.setContent(markerInfo)
               infoWindow.open(marker)
             });
         markers.push(marker)
       });
   });
 }

	geocoder = new google.maps.Geocoder();

	data.forEach(function(mapData,idx) {
		geocoder.geocode( { 'address': mapData.address}, function(results, status) {
				if (status == google.maps.GeocoderStatus.OK) {
					var marker = new google.maps.Marker({
						map: map,
						position: results[0].geometry.location,
						title: mapData.title,
						//icon: getIcon(mapData.type)
					});
					var contentHtml = "<div style='width:300px;height:200px'><h3>"+mapData.title+"</h3>"+mapData.Name+"</div>";
					var infowindow = new google.maps.InfoWindow({
		    			content: contentHtml
					});
					google.maps.event.addListener(marker, 'click', function() {
					  infowindow.open(map,marker);
					});
					marker.locid = idx+1;
					marker.infowindow = infowindow;
					markers[markers.length] = marker;

					var sideHtml = '<p class="loc" data-locid="'+marker.locid+'"><b>'+mapData.title+'</b><br/>';
						 sideHtml += mapData.address + '</p>';
						 $("#locs").append(sideHtml);

					//Are we all done? Not 100% sure of this
					if(markers.length == data.length) doFilter();

				} else {
					//alert("Geocode was not successful for the following reason: " + status);
				}
			});

	});

	$(document).on("click",".loc",function() {
		var thisloc = $(this).data("locid");
		for(var i=0; i<markers.length; i++) {
			if(markers[i].locid == thisloc) {
				//get the latlong
				if(lastinfowindow instanceof google.maps.InfoWindow) lastinfowindow.close();
				map.panTo(markers[i].getPosition());
				markers[i].infowindow.open(map, markers[i]);
				lastinfowindow = markers[i].infowindow;
			}
		}
	});

	/*
	Run on every change to the checkboxes. If you add more checkboxes to the page,
	we should use a class to make this more specific.
	*/

	function doFilter() {
		if(!locIndex) {
			locIndex = {};
			//I reverse index markers to figure out the position of loc to marker index
			for(var x=0, len=markers.length; x<len; x++) {
				locIndex[markers[x].locid] = x;
			}
		}

		//what's checked?
		var checked = $("input[type=checkbox]:checked");
		var selTypes = [];
		for(var i=0, len=checked.length; i<len; i++) {
			selTypes.push($(checked[i]).val());
		}
		for(var i=0, len=data.length; i<len; i++) {
			var sideDom = "p.loc[data-locid="+(i+1)+"]";

			//Only hide if length != 0
			if(checked.length !=0 && selTypes.indexOf(data[i].type) < 0) {
				$(sideDom).hide();
				markers[locIndex[i+1]].setVisible(false);
			} else {
				$(sideDom).show();
				markers[locIndex[i+1]].setVisible(true);
			}
		}
	}



  function initialize() {
  	var latlng = new google.maps.LatLng(42.341056, -83.0535502);
  	var myOptions = {
  		zoom: 12,
  		center: latlng,
  		mapTypeId: google.maps.MapTypeId.HYBRID
  	};

    map_document = document.getElementById('map_canvas')
    map = new google.maps.Map(map_document, myOptions);

    loadMarkers()

  }

  $(document).on("click", "input[type=checkbox]", doFilter);
